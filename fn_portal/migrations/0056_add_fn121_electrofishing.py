# Generated by Django 3.2.12 on 2022-11-16 14:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('fn_portal', '0055_comment4_gonwt_salmonid_age_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='FN121ElectroFishing',
            fields=[
                ('created_timestamp', models.DateTimeField(auto_now_add=True)),
                ('modified_timestamp', models.DateTimeField(auto_now=True)),
                ('sample', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='electro_fishing_data', serialize=False, to='fn_portal.fn121')),
                ('shock_sec', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3000)], verbose_name='A measure of shocking effort, measured in seconds.')),
                ('volts_min', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1200)])),
                ('volts_max', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1200)])),
                ('volts_mean', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1200)])),
                ('amps_min', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(80)], verbose_name='Minimum current observed a sample or transect.')),
                ('amps_max', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(80)], verbose_name='Maximum current observed a sample or transect.')),
                ('amps_mean', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(80)], verbose_name='Mean current observed a sample or transect.')),
                ('power_min', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15000)], verbose_name='Minimum power output during an electrofishing sample.')),
                ('power_max', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15000)], verbose_name='Maximum power output during an electrofishing sample.')),
                ('power_mean', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15000)], verbose_name='Maximum power output during an electrofishing sample.')),
                ('conduct', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2000)], verbose_name='Measured conductivity of the water in microsiemens (microS).')),
                ('turbidity', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(400)], verbose_name='Measured turbidity of the water within a sample, measured in NTU:')),
                ('freq', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(250)], verbose_name='Frequency of oscillations of alternating current  measured in hertz (Hz)')),
                ('pulse_dur', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Pulse duration measured in pulses per second (PPS)')),
                ('pulse_pattern', models.CharField(blank=True, help_text='Pulse pattern...', max_length=100, null=True)),
                ('duty_cycle', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='The fraction of one period in which a signal or system is active')),
                ('waveform', models.CharField(blank=True, choices=[('SDC', 'Smooth DC'), ('PDC', 'Pulsed DC'), ('BPDC', 'Burst of Pulses DC'), ('AC', 'Alternating Current (AC)'), ('PAC', 'Pulsed AC'), ('RDC', 'Rectangular Wave DC'), ('RBDC', 'Rectangular Wave Burst DC')], help_text='The type of electrical waveform created by the electrofishing unit.', max_length=4, null=True)),
                ('anodes', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)], verbose_name='Number of anode arrays.')),
                ('num_netters', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(8)], verbose_name='Number of people actively netting fish during sample or transect. ')),
                ('comment', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ('sample',),
            },
        ),
        migrations.AlterField(
            model_name='fn126',
            name='lf',
            field=models.CharField(blank=True, choices=[(None, 'No Data'), ('00', 'Multiple'), ('10', 'Egg'), ('20', 'Larvae/Nauplii'), ('30', 'Pupa'), ('40', 'Nymph'), ('50', 'Juvenile/Adult'), ('60', 'Remains'), ('99', 'Unknown')], help_text='Life Stage', max_length=2, null=True),
        ),
    ]
