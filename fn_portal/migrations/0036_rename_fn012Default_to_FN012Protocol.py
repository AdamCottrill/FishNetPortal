# Generated by Django 2.2.23 on 2022-02-28 10:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0008_fn012_and_fn012Defaults_tables'),
        ('fn_portal', '0035_fn012_allow_null_fdsam2_and_agedec2'),
    ]

    operations = [
        migrations.CreateModel(
            name='FN012Protocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('grp', models.CharField(db_index=True, default='00', max_length=3)),
                ('grp_des', models.CharField(default='Default Group', help_text='The meaning of a GRP code or more general information about SPC+GRP.', max_length=300)),
                ('biosam', models.CharField(choices=[('0', 'Not sampled'), ('1', 'Complete sampling'), ('2', 'Random sampling'), ('3', 'Size-stratified sampling')], default='1', help_text='Biosampling Code', max_length=1)),
                ('sizsam', models.CharField(choices=[('0', 'Not Sampled'), ('1', 'FN125'), ('2', 'FN124'), ('3', 'Both FN124 and FN125')], default=0, help_text='Size Sample Code', max_length=1)),
                ('sizatt', models.CharField(blank=True, choices=[('FLEN', 'Fork Length'), ('TLEN', 'Total Length')], default='FLEN', help_text='Size Sample Code', max_length=4, null=True)),
                ('sizint', models.IntegerField(default=1, help_text='Size Sample Interval (mm)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('fdsam1', models.CharField(choices=[('0', 'Data not collected'), ('1', 'Collected, not processed'), ('2', 'Collected, processed')], default='0', help_text='FDSAM Sampling Status', max_length=1)),
                ('fdsam2', models.CharField(blank=True, choices=[('1', 'Fish Community and Habitat Section (FCH), Fisheries Branch'), ('2', 'Haliburton Hastings Fisheries Assessment Unit'), ('3', 'Other')], help_text='FDSAM Taxon Coding Scheme', max_length=1, null=True)),
                ('spcmrk1', models.CharField(choices=[('0', 'No marks exist & none applied'), ('1', 'Marks exist & none applied'), ('2', 'No marks exist & marks applied'), ('3', 'Marks exist & marks applied')], default='0', help_text='Species Mark Exists', max_length=1)),
                ('spcmrk2', models.CharField(blank=True, choices=[('0', 'Marks not unique marks'), ('1', 'Marks unique'), ('2', 'Marks unique and non-unique')], help_text='Species Mark Unique', max_length=1, null=True)),
                ('agedec1', models.CharField(choices=[('0', 'No structures sampled'), ('1', 'Scales (any side)'), ('2', 'Scales (left side)'), ('3', 'Scales (right side)'), ('4', 'Pectoral ray'), ('5', 'Pectoral spine'), ('6', 'Pelvic ray'), ('7', 'Dorsal spine'), ('A', 'Otolith'), ('B', 'Operculum'), ('C', 'Sub-operculum'), ('D', 'Cleithrum'), ('E', 'Centrum'), ('F', 'Branchiostegal'), ('G', 'Other (NO LONGER SUPPORTED)'), ('M', 'Maxilla'), ('T', 'Tag'), ('V', 'Vertebrate'), ('X', 'Methods vary across fish')], default='0', help_text='Age Method', max_length=1)),
                ('agedec2', models.CharField(blank=True, choices=[('0', 'Not validated'), ('1', 'Validated')], help_text='Age Method', max_length=1, null=True)),
                ('flen_min', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(700)], verbose_name='Minimum Fork Length (mm)')),
                ('flen_max', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2000)], verbose_name='Maximim Fork Length (mm)')),
                ('tlen_min', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(700)], verbose_name='Minimum Total Length (mm)')),
                ('tlen_max', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2000)], verbose_name='Maximum Total Length (mm)')),
                ('rwt_min', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5000)], verbose_name='Minimum Round Weight (g)')),
                ('rwt_max', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5000)], verbose_name='Maximum Round Weight (g)')),
                ('k_min_error', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2.0)], verbose_name='Minimum K (TLEN) - error')),
                ('k_min_warn', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1.5)], verbose_name='Minimum K (TLEN) - warning')),
                ('k_max_error', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5.0)], verbose_name='Maximum K (FLEN) - error')),
                ('k_max_warn', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4.0)], verbose_name='Maximum K (FLEN) - warning')),
                ('flen2tlen_alpha', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-20.0), django.core.validators.MaxValueValidator(80.0)], verbose_name='Intercept of FLEN-TLEN Regression')),
                ('flen2tlen_beta', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(1.25)], verbose_name='Slope of FLEN-TLEN Regression')),
                ('lake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='default_sampling_constraints', to='common.Lake')),
                ('protocol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='default_sampling_constraints', to='fn_portal.FNProtocol')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fn012protocol_sample_constraints', to='common.Species')),
            ],
            options={
                'verbose_name_plural': 'FN012Protocols - Protocol Sampling Specs',
            },
        ),
        migrations.AlterField(
            model_name='fn012',
            name='flen_max',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2000)], verbose_name='Maximim Fork Length (mm)'),
        ),
        migrations.AlterField(
            model_name='fn012',
            name='flen_min',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(700)], verbose_name='Minimum Fork Length (mm)'),
        ),
        migrations.AlterField(
            model_name='fn012',
            name='rwt_max',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5000)], verbose_name='Maximum Round Weight (g)'),
        ),
        migrations.AlterField(
            model_name='fn012',
            name='rwt_min',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5000)], verbose_name='Minimum Round Weight (g)'),
        ),
        migrations.AlterField(
            model_name='fn012',
            name='sizatt',
            field=models.CharField(blank=True, choices=[('FLEN', 'Fork Length'), ('TLEN', 'Total Length')], default='FLEN', help_text='Size Sample Code', max_length=4, null=True),
        ),
        migrations.AlterField(
            model_name='fn012',
            name='tlen_max',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2000)], verbose_name='Maximum Total Length (mm)'),
        ),
        migrations.AlterField(
            model_name='fn012',
            name='tlen_min',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(700)], verbose_name='Minimum Total Length (mm)'),
        ),
        migrations.DeleteModel(
            name='FN012Default',
        ),
    ]
